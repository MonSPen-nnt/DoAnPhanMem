@model DAPMver1.Data.NhaCungCap

@{
    ViewData["Title"] = "Edit";
}
<style>
    /* General body styles */
    body {
        background-color: #f4f7fa;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #333;
    }

    /* Container styling for form elements */
    .form-horizontal {
        max-width: 900px;
        margin: 0 auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    h2 {
        font-size: 2rem;
        color: #2c3e50;
        margin-bottom: 20px;
        text-align: center;
    }

    .form-group {
        margin-bottom: 15px;
        display: flex;
        align-items: center;
    }

        /* Styling for labels */
        .form-group label {
            font-weight: 500;
            margin-right: 15px;
            color: #34495e;
            flex-basis: 20%;
            text-align: right;
        }

    /* Input fields styling */
    .form-control {
        width: 100%;
        padding: 10px;
        font-size: 1rem;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        transition: all 0.2s ease;
    }

        /* Input field hover and focus effects */
        .form-control:focus {
            border-color: #3498db;
            box-shadow: 0 0 5px rgba(52, 152, 219, 0.5);
            outline: none;
        }

    /* Validation error styling */
    .text-danger {
        color: #e74c3c;
        font-size: 0.9rem;
    }

    /* Button styling */
    .btn-default {
        background-color: #3498db;
        color: white;
        border: none;
        padding: 12px 30px;
        font-size: 1.1rem;
        border-radius: 25px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-right: 10px;
    }

        /* Button hover effect */
        .btn-default:hover {
            background-color: #2980b9;
            transform: translateY(-1px);
        }

        /* Button active effect */
        .btn-default:active {
            transform: translateY(0);
        }

    /* Back to List link */
    a {
        text-decoration: none;
        color: #3498db;
        font-weight: 500;
        transition: color 0.3s ease;
    }

        a:hover {
            color: #2980b9;
        }
</style>

<h2>Chỉnh sửa nhà cung cấp</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MaNhaCungCap)

        <div class="form-group">
            @Html.LabelFor(model => model.TenNhaCungCap,"Tên nhà cung cấp", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenNhaCungCap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenNhaCungCap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sdt, "Số điện thoại", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sdt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sdt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaChi, "Địa chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Trở về danh sách", "Index")
</div>